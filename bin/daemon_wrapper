#!/usr/bin/env ruby
# It's a wrapper script, supplied with RunInBackground module, that can receive commands 
# from Windows Service Control and run user scripts, that it received as an argument

LOG_FILE = File.join(File.dirname(File.expand_path(__FILE__)), "..", "fm_test.log").to_s
DBG = false  # NOTE be sure to desable it in production

require 'win32/daemon'
include Win32

begin
	class Daemon
		def service_main
				File.open(LOG_FILE, 'a+') {|f| f.puts "Wrapper starts: #{ARGV.join(" " )}"} if DBG 
				@pid = Process.spawn ARGV.join(" " )
				File.open(LOG_FILE, 'a+') {|f| f.puts "Wrapper inner app pid: #{@pid}"} if DBG 
				Process.waitpid @pid
		end

		def service_stop
			Process.kill 9, @pid
			exit!
		end
	end

	Daemon.mainloop

rescue Exception => err
	File.open(LOG_FILE, 'a+') {|f| f.puts "Wrapper error: #{err}"} if DBG 
	raise
end

