#!/usr/bin/env ruby

# Runs backup server. This server monitors a set of directories (blobs/patterns).
# The files in those directories are indexed (calculating their SHA1).
# A remote server copies new/changed files in the backup server. The backup server
# index those new files too and send the content data (their SHA1 to the original server).

# NOTE this file mainly is a copy of content_server

require 'content_server'  #todo: yarondbb need it?
require 'content_server/backup_server' # specific backup server impl
require 'content_server/server' # shared file between content\backup
require 'log'
require 'params'
#require 'run_in_background'

Params.init ARGV
Log.init
ContentServer.init_globals

Thread.abort_on_exception = true  # TODO (genadyp) should be treated globally? by param for example.

begin
  ContentServer.run_backup_server
rescue SystemExit, SignalException => exception
  # TODO (genadyp) do we need to trap signals by types?
  ContentServer.handle_program_termination(exception)
  Log.flush
  exit
rescue Exception => exception
  ContentServer.handle_program_termination(exception)
  Log.flush
  exit
end
